@import "mixins/scale-variables";

$spacing-prefix: "space";
$spacings: "xs", "s", "m", "l", "xl", "xxl";
$spacing-styles: "stack", "inline", "inset", "inset-squish", "inset-stretch";

@mixin space($style, $size) {
  $variable: variable($spacing-prefix, "#{$style}-#{$size}");

  $property: "padding";
  @if $style == "stack" {
    $property: "margin-bottom";
  } @else if $style == "inline" {
    $property: "margin-right";
  }

  #{$property}: #{$variable};
}

:root {
  @include scale-variables("space", 1rem, m, 2, $spacings);

  @each $variant in $spacings {
    @each $style in $spacing-styles {
      $current: variable($spacing-prefix, $variant);
      $size-down: calc(#{$current} / #{variable($spacing-prefix, "ratio")});

      $value: 0;
      @if $style == "stack" {
        $value: $current;
      } @else if $style == "inline" {
        $value: $current;
      } @else if $style == "inset" {
        $value: $current $current $current $current;
      } @else if $style == "inset-squish" {
        $value: $size-down $current $size-down $current;
      } @else if $style == "inset-stretch" {
        $value: $current $size-down $current $size-down;
      } @else {
        @error "Unknown style #{$style}.";
      }

      --#{$spacing-prefix}-#{$style}-#{$variant}: #{$value};
    }
  }
}

@each $style in $spacing-styles {
  @each $variant in $spacings {
    .k-#{$spacing-prefix}-#{$style}-#{$variant} {
      @include space($style, $variant);
    }
  }
}
